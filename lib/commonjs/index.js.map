{"version":3,"sources":["index.ts"],"names":["useDimensionsListener","Dimensions","get","screenDimension","setScreenDimension","windowDimension","setWindowDimension","handleDimensionChange","window","screen","listener","addEventListener","remove","percentageCalculation","max","val","fontCalculation","height","width","widthDimension","aspectRatioBasedHeight","Math","sqrt","pow","useDimensionsChange","effect","hasMountRef","dimensions","current","destroy","cleanUp","responsiveHeight","h","responsiveWidth","w","responsiveFontSize","f","responsiveScreenHeight","responsiveScreenWidth","responsiveScreenFontSize","useResponsiveHeight","useResponsiveWidth","useResponsiveFontSize","useResponsiveScreenHeight","useResponsiveScreenWidth","useResponsiveScreenFontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Dimensions, ScaledSize } from \"react-native\";\n\nconst useDimensionsListener = () => {\n  const [screenDimension, setScreenDimension] = useState(\n    Dimensions.get(\"screen\")\n  );\n  const [windowDimension, setWindowDimension] = useState(\n    Dimensions.get(\"window\")\n  );\n\n  useEffect(() => {\n    function handleDimensionChange({\n      window,\n      screen\n    }: {\n      window: ScaledSize;\n      screen: ScaledSize;\n    }) {\n      setWindowDimension(window);\n      setScreenDimension(screen);\n    }\n\n    const listener = Dimensions.addEventListener(\"change\", handleDimensionChange);\n    return () => {\n      if (listener) {\n        listener.remove();\n      }\n    };\n  }, []);\n\n  return {\n    screen: screenDimension,\n    window: windowDimension\n  };\n};\n\ntype EffectParams = {\n  screen: ScaledSize;\n  window: ScaledSize;\n};\n\ntype EffectCallback =\n  | ((opts: EffectParams) => () => any)\n  | ((opts: EffectParams) => undefined)\n  | ((opts: EffectParams) => void);\n\nconst percentageCalculation = (max: number, val: number) => max * (val / 100);\n\nconst fontCalculation = (height: number, width: number, val: number) => {\n  const widthDimension = height > width ? width : height;\n  const aspectRatioBasedHeight = (16 / 9) * widthDimension;\n  return percentageCalculation(\n    Math.sqrt(\n      Math.pow(aspectRatioBasedHeight, 2) + Math.pow(widthDimension, 2)\n    ),\n    val\n  );\n};\n\nexport const useDimensionsChange = (effect: EffectCallback) => {\n  const hasMountRef = useRef(false);\n  const dimensions = useDimensionsListener();\n\n  useEffect(() => {\n    if (hasMountRef.current) {\n      const destroy = effect(dimensions);\n      let cleanUp: any = () => null;\n      if (typeof destroy === \"function\") {\n        cleanUp = destroy;\n      }\n      return () => cleanUp();\n    } else {\n      hasMountRef.current = true;\n    }\n  }, [dimensions, effect]);\n};\n\nexport const responsiveHeight = (h: number) => {\n  const { height } = Dimensions.get(\"window\");\n  return percentageCalculation(height, h);\n};\n\nexport const responsiveWidth = (w: number) => {\n  const { width } = Dimensions.get(\"window\");\n  return percentageCalculation(width, w);\n};\n\nexport const responsiveFontSize = (f: number) => {\n  const { height, width } = Dimensions.get(\"window\");\n  return fontCalculation(height, width, f);\n};\n\nexport const responsiveScreenHeight = (h: number) => {\n  const { height } = Dimensions.get(\"screen\");\n  return percentageCalculation(height, h);\n};\n\nexport const responsiveScreenWidth = (w: number) => {\n  const { width } = Dimensions.get(\"screen\");\n  return percentageCalculation(width, w);\n};\n\nexport const responsiveScreenFontSize = (f: number) => {\n  const { height, width } = Dimensions.get(\"screen\");\n  return fontCalculation(height, width, f);\n};\n\nexport const useResponsiveHeight = (h: number) => {\n  const { height } = useDimensionsListener().window;\n  return percentageCalculation(height, h);\n};\n\nexport const useResponsiveWidth = (w: number) => {\n  const { width } = useDimensionsListener().window;\n  return percentageCalculation(width, w);\n};\n\nexport const useResponsiveFontSize = (f: number) => {\n  const { height, width } = useDimensionsListener().window;\n  return fontCalculation(height, width, f);\n};\n\nexport const useResponsiveScreenHeight = (h: number) => {\n  const { height } = useDimensionsListener().screen;\n  return percentageCalculation(height, h);\n};\n\nexport const useResponsiveScreenWidth = (w: number) => {\n  const { width } = useDimensionsListener().screen;\n  return percentageCalculation(width, w);\n};\n\nexport const useResponsiveScreenFontSize = (f: number) => {\n  const { height, width } = useDimensionsListener().screen;\n  return fontCalculation(height, width, f);\n};\n"]}